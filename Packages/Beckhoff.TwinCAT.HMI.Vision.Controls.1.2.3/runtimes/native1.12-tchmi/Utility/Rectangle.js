var TcHmi;!function(t){let n;!function(t){let n;!function(t){let n;!function(t){let n;!function(t){t.convertRotatedToUpright=function(t){return{nX:Math.floor(t.aCenter[0]-t.stSize.fWidth/2),nY:Math.floor(t.aCenter[1]-t.stSize.fHeight/2),nWidth:Math.floor(t.stSize.fWidth),nHeight:Math.floor(t.stSize.fHeight)}},t.convertUprightToRotated=function(t,n=0){return{aCenter:[t.nX+t.nWidth/2,t.nY+t.nHeight/2],stSize:{fWidth:t.nWidth,fHeight:t.nHeight},fAngle:n}},t.extractUprightCorners=function(t){return[[t.nX,t.nY],[t.nX+t.nWidth,t.nY],[t.nX+t.nWidth,t.nY+t.nHeight],[t.nX,t.nY+t.nHeight]]},t.extractRotatedCorners=function(t){const n=Math.sqrt(Math.pow(t.stSize.fWidth,2)+Math.pow(t.stSize.fHeight,2))/2,e=Math.atan2(t.stSize.fHeight,t.stSize.fWidth),i=t.fAngle/180*Math.PI;return[[t.aCenter[0]-Math.cos(e+i)*n,t.aCenter[1]-Math.sin(e+i)*n],[t.aCenter[0]+Math.cos(i-e)*n,t.aCenter[1]+Math.sin(i-e)*n],[t.aCenter[0]+Math.cos(e+i)*n,t.aCenter[1]+Math.sin(e+i)*n],[t.aCenter[0]-Math.cos(i-e)*n,t.aCenter[1]-Math.sin(i-e)*n]]}}(n=t.Rectangle||(t.Rectangle={}))}(n=t.Vision||(t.Vision={}))}(n=t.Beckhoff||(t.Beckhoff={}))}(n=t.Controls||(t.Controls={}))}(TcHmi||(TcHmi={}));