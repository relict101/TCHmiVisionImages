var TcHmi;!function(t){let s;!function(t){let s;!function(t){let s;!function(t){class s extends t.TcHmiVnShape{constructor(e,i,o){super(e,i,o),this.__$props=new s.Properties,this.__$controls=new s.SubControls,this.__points=[],this.__pointHandles=[],this.__shape=null,this.__stopNextEndPropagation=!1,this.__pointDrag={lastPoint:new t.Vector(0,0),active:!1,pointIndex:0},this.__shapeDrag={lastPoint:new t.Vector(0,0),active:!1},this.__shapeRotation={active:!1,lastAngle:0,center:new t.Vector(0,0)},this.__polygonComplete=!1,this.__rotationHandle=null}__attach(){this.__registerHandleElements(),super.__attach(),this.__registerStaticListeners(),this.__updateShapeUI(),this.__processClickableSize()}__registerStaticListeners(){this.__$dom.SVG.bind("mousedown",this.__handleSVGClick.bind(this)),this.__$dom.SVG.bind("touchstart",this.__handleTouchStart.bind(this)),this.__$dom.SVG.bind("touchmove",this.__handleMouseMove.bind(this)),this.__$dom.SVG.bind("mousemove",this.__handleMouseMove.bind(this)),this.__$dom.SVG.bind("mouseup",this.__handleMouseEnd.bind(this)),this.__$dom.SVG.bind("mouseleave",this.__handleMouseEnd.bind(this)),this.__$dom.SVG.bind("touchend",this.__handleMouseEnd.bind(this)),this.__$dom.SVG.bind("touchcancel",this.__handleMouseEnd.bind(this)),this.__rotationHandle.bind("mousedown",this.__handleRotationMouseDown.bind(this)),this.__rotationHandle.bind("touchstart",this.__handleRotationMouseDown.bind(this))}__registerHandleElements(){this.__rotationHandle=this.__element.find(".TcHmi_Controls_Beckhoff_Vision_TcHmiVnShape-r"),0===this.__rotationHandle.length&&console.error("element not found (r)")}__handleSVGClick(t){if(t.target===this.__$dom.SVG.get(0)&&!this.__polygonComplete){t.stopPropagation();const s=this.__positionFromEvent(t);this.__createPointAndHandle(s),this.__updateShapeData(!0),this.__updateShapeUI(),this.__stopNextEndPropagation=!0}}__handleTouchStart(t){this.__handleSVGClick(t)}__handleMouseMove(s){if(this.__stopNextEndPropagation)return void s.stopPropagation();if(!this.__pointDrag.active&&!this.__shapeDrag.active&&!this.__shapeRotation.active)return;let e;if(s.stopPropagation(),"mousemove"===s.type)e=this.__positionFromEvent(s);else if("touchmove"===s.type){const i=new t.Vector(s.touches[0].clientX,s.touches[0].clientY),o=this.__$dom.SVG[0].getBoundingClientRect(),_=new t.Vector(o.x,o.y);e=i.minus(_)}else e=new t.Vector(0,0);this.__handleNewPointerPosition(e)}__handleNewPointerPosition(t){if(this.__shapeDrag.active){const s=t.minus(this.__shapeDrag.lastPoint);this.__shapeDrag.lastPoint=t;for(let t=0;t<this.__points.length;++t)null!=this.__points[t]&&(this.__points[t].x+=s.x,this.__points[t].y+=s.y)}else if(this.__pointDrag.active){const s=this.__pointDrag.pointIndex,e=t.minus(this.__pointDrag.lastPoint);this.__pointDrag.lastPoint=t,this.__points[s]=this.__points[s].plus(e)}else if(this.__shapeRotation.active){const s=this.__shapeRotation.center,e=t.minus(s);let i=Math.atan2(e.y,e.x);0!==this.__$props.AngleInterval&&(i-=(i+2*Math.PI)%(this.__$props.AngleInterval*Math.PI/180));const o=i-this.__shapeRotation.lastAngle;this.__points=this.__points.map((t=>t.minus(s).rotate2d(o).plus(s))),this.__shapeRotation.lastAngle=i}this.__updateShapeData(!0),this.__updateShapeUI()}__handleMouseEnd(t){this.__pointDrag.active=!1,this.__shapeDrag.active=!1,this.__shapeRotation.active=!1,this.__stopNextEndPropagation&&(this.__stopNextEndPropagation=!1,t.stopPropagation()),this.__updateShapeData(!0),this.__polygonComplete&&this.__$events.ShapeConfirmed.raise()}__handleCircleMouseDown(t,s){if(0===t&&this.__$props.Closed&&!this.__polygonComplete)this.__polygonComplete=!0,this.__$dom.SVG.css("cursor","default"),this.__updateShapeUI(),this.__stopNextEndPropagation=!0,this.__updateShapeData(!0);else{const e=this.__positionFromEvent(s);this.__pointDrag.active=!0,this.__pointDrag.lastPoint=e,this.__pointDrag.pointIndex=t,s.stopPropagation()}}__handleShapeMouseDown(s){let e;if(s.stopPropagation(),"mousedown"===s.type)e=this.__positionFromEvent(s);else if("touchstart"===s.type){const i=new t.Vector(s.touches[0].clientX,s.touches[0].clientY),o=this.__$dom.SVG[0].getBoundingClientRect(),_=new t.Vector(o.x,o.y);e=i.minus(_)}else e=new t.Vector(0,0);this.__shapeDrag.active=!0,this.__shapeDrag.lastPoint=e}__handleRotationMouseDown(s){if(s.stopPropagation(),!this.__$props.RotationHandle)return;let e;if("mousedown"===s.type)e=this.__positionFromEvent(s);else if("touchstart"===s.type){const i=new t.Vector(s.touches[0].clientX,s.touches[0].clientY),o=this.__$dom.SVG[0].getBoundingClientRect(),_=new t.Vector(o.x,o.y);e=i.minus(_)}else e=new t.Vector(0,0);const i=this.__points.reduce(((t,s)=>t.plus(s)),new t.Vector(0,0)).times(1/this.__points.length),o=e.minus(i);let _=Math.atan2(o.y,o.x);0!==this.__$props.AngleInterval&&(_-=(_+2*Math.PI)%(this.__$props.AngleInterval*Math.PI/180)),this.__shapeRotation.active=!0,this.__shapeRotation.lastAngle=_,this.__shapeRotation.center=i}__updateShapeUI(){if(this.__isAttached){if(0===this.__points.length)null!=this.__shape&&(this.__shape.remove(),this.__shape=null);else{null==this.__shape&&(this.__shape=t.CreateSVG("polyline").prependTo(this.__$dom.SVG),this.__shape.css({stroke:this.__$props.StrokeColor.color,"stroke-width":this.__$props.StrokeThickness.toString(),fill:"none","stroke-linejoin":"round","stroke-linecap":"round",cursor:"all-scroll",display:"block"}),this.__shape.bind("mousedown",this.__handleShapeMouseDown.bind(this)),this.__shape.bind("touchstart",this.__handleShapeMouseDown.bind(this)));let s=this.__points.map((t=>null==t?void 0:t.toArray().join(","))).join(" ");this.__polygonComplete&&(s+=` ${this.__points[0].x},${this.__points[0].y}`),this.__shape.attr("points",s)}for(;this.__pointHandles.length>this.__points.length;)this.__pointHandles.pop().remove();if(this.__points.forEach(((t,s)=>{null==this.__pointHandles[s]&&this.__createHandle(t,this.__pointHandles.length),this.__pointHandles[s].attr("cx",this.__points[s].x),this.__pointHandles[s].attr("cy",this.__points[s].y),this.__pointHandles[s].attr("r",this.__$props.HandleSize)})),this.__polygonComplete&&this.__$props.RotationHandle){const s=this.__points.reduce(((t,s)=>t.plus(s)),new t.Vector(0,0)).times(1/this.__points.length),e=this.__points.reduce(((t,e)=>Math.max(t,e.distanceTo(s))),0),i=this.__points[0].minus(s),o=s.plus(i.times((e+(2*this.__$props.HandleSize+this.__$props.ClickableSize))/i.l2()));this.__rotationHandle.attr("cx",o.x),this.__rotationHandle.attr("cy",o.y),this.__rotationHandle.attr("r",this.__$props.HandleSize),this.__rotationHandle.attr("fill",this.__$props.HandleColor.color),this.__rotationHandle.css("display","block")}else this.__rotationHandle.css("display","none")}}__createPointAndHandle(t){this.__points.push(t.copy()),this.__$props.NumPoints&&this.__points.length>=this.__$props.NumPoints&&(this.__polygonComplete=!0,this.__isAttached&&this.__$dom.SVG.css("cursor","default"));const s=this.__points.length-1;this.__createHandle(t,s)}__createHandle(s,e){if(!this.__isAttached)return;const i=t.CreateSVG("circle").appendTo(this.__$dom.SVG);this.__pointHandles[e]=i,i.attr("fill",this.__$props.HandleColor.color),i.attr("cx",s.x),i.attr("cy",s.y),i.attr("r",this.__$props.HandleSize),i.attr("stroke","rgba(0, 0, 0, 0)"),i.attr("stroke-opacity","0"),i.attr("stroke-width",this.__$props.ClickableSize),i.css("display","block"),i.bind("mousedown",this.__handleCircleMouseDown.bind(this,e)),i.bind("touchstart",this.__handleCircleMouseDown.bind(this,e)),i.addClass("TcHmi_Controls_Beckhoff_Vision_TcHmiVnShape-Clutch")}__updateShapeData(s){if(this.__polygonComplete){const e=t.Vector.fromArray(this.__$props.DataOffset);this.__setShapeDataInternal(this.__points.map((t=>[(t=t.minus(e).times(1/this.__$props.DataScale)).x,t.y]))),s&&this.__$events.ShapeChanged.raise()}}__positionFromEvent(s){if("mousedown"===s.type||"mousemove"===s.type)return t.Position.fromEvent(s);if("touchstart"===s.type||"touchmove"===s.type){const e=new t.Vector(s.touches[0].clientX,s.touches[0].clientY),i=this.__$dom.SVG[0].getBoundingClientRect(),o=new t.Vector(i.x,i.y);return e.minus(o)}return new t.Vector(0,0)}__clearShape(){this.__points.splice(0,this.__points.length),this.__polygonComplete=!1,this.__isAttached&&this.__$dom.SVG.css("cursor","crosshair"),this.__updateShapeUI()}__shapeDataIsValid(){const t=this.__$props.ShapeData;return!!Array.isArray(t)&&(0!==t.length&&!t.reduce(((t,s)=>t&&0===s[0]&&0===s[1]),!0))}__processHandleColor(){this.__isAttached&&null!=this.__$props.HandleColor&&this.__pointHandles.forEach((t=>{t.attr("fill",this.__$props.HandleColor.color)}))}__processStrokeColor(){this.__isAttached&&null!=this.__shape&&this.__shape.attr("stroke",this.__$props.StrokeColor.color)}__processWidthChange(s){this.__points=this.__points.map((e=>new t.Vector(e.x*s,e.y))),this.__pointDrag.lastPoint.x*=s,this.__shapeDrag.lastPoint.x*=s,this.__shapeRotation.center.x*=s,this.__updateShapeData(!1),this.__updateShapeUI()}__processHeightChange(s){this.__points=this.__points.map((e=>new t.Vector(e.x,e.y*s))),this.__pointDrag.lastPoint.y*=s,this.__shapeDrag.lastPoint.y*=s,this.__shapeRotation.center.y*=s,this.__updateShapeData(!1),this.__updateShapeUI()}getShapeData(){return this.__$props.ShapeData}setShapeData(t){this.__$setProperty("ShapeData",t)}__setShapeDataInternal(t){this.__$setPropertyInternal("ShapeData",t)}__processShapeData(s,e,i){if(this.__shapeDataIsValid()){const e=t.Vector.fromArray(this.__$props.DataOffset);if(this.__points=s.map(((s,i)=>(null==this.__pointHandles[i]&&this.__createPointAndHandle(t.Vector.fromArray(s)),t.Vector.fromArray(s).times(this.__$props.DataScale).plus(e)))),this.__points.length>0)if(0!==this.__$props.NumPoints&&this.__points.length>=this.__$props.NumPoints||0===this.__$props.NumPoints&&this.__points.length>=3)for(this.__polygonComplete=!0,this.__isAttached&&this.__$dom.SVG.css("cursor","default");this.__points.length>this.__$props.NumPoints&&0!==this.__$props.NumPoints;)this.__points.splice(this.__points.length-1),this.__pointHandles[this.__pointHandles.length-1].remove(),this.__pointHandles.splice(this.__pointHandles.length-1);else this.__polygonComplete=!1;else this.__polygonComplete=!1}else this.__polygonComplete=!1;this.__updateShapeUI(),i||this.__$events.ShapeConfirmed.raise()}getNumPoints(){return this.__$props.NumPoints}setNumPoints(t){this.__$setProperty("NumPoints",t)}__processNumPoints(t){this.__points.length>t&&(this.__polygonComplete=!0,this.__isAttached&&this.__$dom.SVG.css("cursor","default"),this.__points=this.__points.slice(0,t)),this.__updateShapeUI()}getClosed(){return this.__$props.Closed}setClosed(t){this.__$setProperty("Closed",t)}__processClosed(){this.__updateShapeUI()}clear(){this.__clearShape()}getRotationHandle(){return this.__$props.RotationHandle}setRotationHandle(t){this.__$setProperty("RotationHandle",t)}getAngleInterval(){return this.__$props.AngleInterval}setAngleInterval(t){this.__$setProperty("AngleInterval",t)}__processClickableSize(){var t;if(!this.__isAttached)return;const s=this.__$props.ClickableSize;null===(t=this.__rotationHandle)||void 0===t||t.attr("stroke-width",s),this.__pointHandles.forEach((t=>{t.attr("stroke-width",s)}))}}t.TcHmiVnPolygon=s,function(s){class e extends t.TcHmiVnShape.Properties{constructor(){super(...arguments),this.ShapeData=[],this.NumPoints=0,this.Closed=!0,this.RotationHandle=!0,this.AngleInterval=0}}s.Properties=e;class i extends t.TcHmiVnShape.SubControls{}s.SubControls=i}(s=t.TcHmiVnPolygon||(t.TcHmiVnPolygon={}))}(s=t.Vision||(t.Vision={}))}(s=t.Beckhoff||(t.Beckhoff={})),t.registerEx("TcHmiVnPolygon","TcHmi.Controls.Beckhoff.Vision",s.Vision.TcHmiVnPolygon)}(s=t.Controls||(t.Controls={}))}(TcHmi||(TcHmi={}));