var TcHmi;!function(o){let r;!function(r){let n;!function(r){let n;!function(r){r.ConvertColor=function(r,n,e,c=!1){switch(n){case o.Controls.Beckhoff.Vision.Color.Space.Gray:{const n=Array.isArray(r)?0|r[0]:0|r;switch(e){case o.Controls.Beckhoff.Vision.Color.Space.Gray:return n;case o.Controls.Beckhoff.Vision.Color.Space.RGB:return[n,n,n];case o.Controls.Beckhoff.Vision.Color.Space.HSV:case o.Controls.Beckhoff.Vision.Color.Space.HLS:return[0,0,n];default:return o.Functions.Beckhoff.Log("Error","Output color format is not valid."),null}}case o.Controls.Beckhoff.Vision.Color.Space.RGB:if(!Array.isArray(r))return o.Functions.Beckhoff.Log("Error","Color does not match the selected color format"),null;switch(e){case o.Controls.Beckhoff.Vision.Color.Space.Gray:return(r[0]+r[1]+r[2])/3;case o.Controls.Beckhoff.Vision.Color.Space.RGB:return r.slice(0,3);case o.Controls.Beckhoff.Vision.Color.Space.HSV:return o.Controls.Beckhoff.Vision.Color.convertRgbToHsv(r);case o.Controls.Beckhoff.Vision.Color.Space.HLS:return o.Controls.Beckhoff.Vision.Color.convertRgbToHls(r);default:return o.Functions.Beckhoff.Log("Error","Output color format is not valid."),null}case o.Controls.Beckhoff.Vision.Color.Space.HSV:if(!Array.isArray(r))return o.Functions.Beckhoff.Log("Error","Color does not match the selected color format"),null;switch(e){case o.Controls.Beckhoff.Vision.Color.Space.Gray:return r[2];case o.Controls.Beckhoff.Vision.Color.Space.RGB:return o.Controls.Beckhoff.Vision.Color.convertHsvToRgb(r);case o.Controls.Beckhoff.Vision.Color.Space.HSV:return r.slice(0,3);case o.Controls.Beckhoff.Vision.Color.Space.HLS:return o.Controls.Beckhoff.Vision.Color.convertHsvToHls(r);default:return o.Functions.Beckhoff.Log("Error","Output color format is not valid."),null}case o.Controls.Beckhoff.Vision.Color.Space.HLS:if(!Array.isArray(r))return o.Functions.Beckhoff.Log("Error","Color does not match the selected color format"),null;switch(e){case o.Controls.Beckhoff.Vision.Color.Space.Gray:return r[2];case o.Controls.Beckhoff.Vision.Color.Space.RGB:return o.Controls.Beckhoff.Vision.Color.convertHlsToRgb(r);case o.Controls.Beckhoff.Vision.Color.Space.HSV:return o.Controls.Beckhoff.Vision.Color.convertHlsToHsv(r);case o.Controls.Beckhoff.Vision.Color.Space.HLS:return r.slice(0,3);default:return o.Functions.Beckhoff.Log("Error","Output color format is not valid."),null}default:return o.Functions.Beckhoff.Log("Error","Color input format is not valid."),null}}}(n=r.Vision||(r.Vision={}))}(n=r.Beckhoff||(r.Beckhoff={})),r.registerFunctionEx("ConvertColor","TcHmi.Functions.Beckhoff.Vision",n.Vision.ConvertColor)}(r=o.Functions||(o.Functions={}))}(TcHmi||(TcHmi={}));